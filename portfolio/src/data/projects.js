// src/data/projects.js
export const projects = [
  {
    id: 1,
    title: "VGA Pet Rock Game",
    tech: "VHDL • RTL • VGA",
    techLong: "VHDL, RTL Design, VGA, Finite State Machines, Circuit Design, Timing Design",
    year: "2025",
    category: "Hardware",
    description: "A fun, interactive spin on the classic Tamagotchi game where your “pet” is actually a rock. \n The VGA Pet Rock Game is an FPGA-based project built on the Basys3 board. Using pushbutton inputs, you can feed, pet, revive, or quit — and the rock responds by changing moods and states such as Happy, Bored, Mad, Sad, or even Dead. Each state is displayed with custom BRAM sprites on a VGA monitor, making the rock come alive in a surprisingly engaging way.\nCheck out the GitHub project for more details!",
    thumb: "/pet_rock.jpg",
    github:"https://github.com/oooogiselle/Pet_Rock_VGA",
    paper:"/pet_rock_report.pdf",
    video:"https://www.youtube.com/shorts/jfZMORfsHPw",
  },
  {
    id: 2,
    title: "Harmonize",
    tech: "React • Tailwind • MongoDB",
    techLong: "React + Vite • Tailwind • Zustand • React Router • Leaflet/Mapbox • three.js (R3F) • Express • MongoDB (Mongoose) • Spotify & Ticketmaster APIs",
    year: "2025",
    category: "Software",
    description:  "Want to hit a concert with friends but don’t know who’s close? Wish you had Spotify-Wrapped-style insights every day? Harmonize is a social music platform that helps you discover, compare, and connect.\n\nDiscover new tracks from a personalized feed, express your taste with customizable profile tiles, and see friends and events on an interactive map—then connect through shared artists, genres, and vibes.\n\nCheck out the code on GitHub to learn more.",
    thumb: "/harmonize.jpg",
    github: "https://github.com/oooogiselle/harmonize_frontend",
  },
  {
    id: 3,
    title: "Skinfluence",
    tech: "Pandas • Numpy • Vader",
    techLong: "Python (pandas, NumPy), scikit-learn (TF-IDF, LDA), sentence-transformers, NLTK, VADER, seaborn/matplotlib; NLP pipeline design, embeddings & cosine similarity, topic modeling, social media data wrangling, engagement metric design, regression analysis, visualization.",
    year: "2025",
    category: "Software",
    description: "Into skincare? Skinfluence uses NLP to compare K-beauty vs. U.S. brands across Reddit and Instagram—what brands say vs. what people feel.\n\nWe analyze 10 brands with embeddings, sentiment, and topic modeling; results show stronger semantic alignment than lexical, more positive branded posts, community sentiment predicting engagement, and K-beauty’s ingredient focus vs. U.S. identity cues.",
    thumb: "/skinfluence.png",
    github:"https://github.com/oooogiselle/Skinfluence",
  },
  {
    id: 4,
    title: "Walking Dino",
    tech: "CAD • Kinematics • Laser Cutting",
    year: "2025",
    category: "Hardware",
    description: "Think dinosaurs are from long ago? We brought them back, just so you know. \n\n I designed, built, and tested a mechanical walking dinosaur using a SolidWorks-modeled four-bar linkage. I also fabricated 15+ custom parts via 3D printing and laser cutting, resolved all interferences, and achieved smooth, repeatable locomotion with 100% stability over 20+ trials. \n\n Check out this isometric view of the dino!",
    thumb: "/dino.JPG",
    isometric: "/dino-isometric.pdf"
  },
  {
    id: 5,
    title: "Nugget Game",
    tech: "C • Client/Server • Visibility",
    year: "2025",
    category: "Software",
    description: "Nugget Game is a multiplayer, Rogue-inspired game with a C client–server architecture. A central server tracks the world; clients render only each player’s field-of-view (fog-of-war). Win by collecting the most gold before all nuggets are gone. \n\n Check out the Github for more documentation!",
    thumb: "/nugget.jpg",
    github:"https://github.com/oooogiselle/nuggets-group-10",
  },
  {
    id: 6,
    title: "Webcam-based Painter",
    tech: "Java • Algorithm • Image Segmentation",
    year: "2024",
    category: "Software",
    description: "Love FaceTime with friends and family? Add some fun with this Webcam Painter! \n\n Click any region on your webcam feed, and the program automatically finds all regions of similar color and paints them the same bright color for a playful, interactive effect. Built in Java using a region-growing algorithm (flood-fill, BFS), the project leverages BufferedImage for real-time image capture, RGB similarity thresholds for region detection, and randomized recoloring for visualization.",
    thumb: "/webcam.jpg",
    github:"https://github.com/oooogiselle/webcam_based_painter",
  },
  {
    id: 7,
    title: "Optimizing Aurora Data: Cleaning and Regridding Ionospheric Data From Swarm-Over-Poker Campaign for Enhanced 3D Visualization",
    tech: "MATLAB • 3D visualization • Image Segmentation",
    year: "2024",
    category: "Research",
    description: "Love FaceTime with friends and family? Add some fun with this Webcam Painter! \n\n Click any region on your webcam feed, and the program automatically finds all regions of similar color and paints them the same bright color for a playful, interactive effect. Built in Java using a region-growing algorithm (flood-fill, BFS), the project leverages BufferedImage for real-time image capture, RGB similarity thresholds for region detection, and randomized recoloring for visualization.",
    thumb: "/rocket.jpeg",
    paper: "/rocket.jpeg",
  },
  
  // ...
];
